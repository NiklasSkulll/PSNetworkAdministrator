name: üõ†Ô∏è Code Refactoring
description: Suggest code improvements, refactoring, or technical debt reduction without changing functionality.
title: "[REFACTOR] "
labels: ['refactoring', 'priority: low', 'priority: medium', 'priority: high']
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        Thanks for suggesting a code improvement! Refactoring helps maintain code quality and makes the module more maintainable.
        Please provide details about what should be refactored and why it would benefit the codebase.
  - type: input
    id: summary
    attributes:
      label: üéØ **Refactoring Summary (One sentence)**
      description: A brief description of what should be refactored and why.
      placeholder: "e.g. Extract duplicate authentication logic into a reusable private function"
    validations:
      required: true

  - type: textarea
    id: current_state
    attributes:
      label: üìù **Current Code/Structure**
      description: Describe the current code that needs refactoring. Include file paths and function names.
      placeholder: |
        Files affected:
        - Public/UserManagement.ps1 (lines 45-60)
        - Public/ComputerManagement.ps1 (lines 32-47)
        
        Current issues:
        - Duplicate credential validation logic
        - Similar error handling patterns repeated
    validations:
      required: true
  - type: textarea
    id: problems
    attributes:
      label: ‚ö†Ô∏è **Code Quality Issues**
      description: What specific problems exist with the current code? (duplication, complexity, performance, etc.)
      placeholder: |
        - Code duplication: Same authentication logic in 5+ functions
        - High complexity: Function has too many parameters and responsibilities
        - Poor performance: Inefficient loops or repeated API calls
        - Hard to test: Tightly coupled code
        - Inconsistent patterns: Different error handling approaches
    validations:
      required: true
  - type: textarea
    id: proposed_solution
    attributes:
      label: ‚ú® **Proposed Refactoring**
      description: How should the code be improved? Describe your suggested approach.
      placeholder: |
        Proposed changes:
        1. Extract common authentication logic into Private/AuthenticationHelpers.ps1
        2. Create a base class for common operations
        3. Standardize error handling patterns
        4. Break down large functions into smaller, focused ones
        
        Benefits:
        - Reduced code duplication
        - Easier to test and maintain
        - Consistent user experience
    validations:
      required: true

  - type: textarea
    id: impact
    attributes:
      label: üéØ **Impact & Benefits**
      description: What are the benefits of this refactoring? How will it improve the codebase?
      placeholder: |
        Benefits:
        - Improved maintainability
        - Easier testing
        - Better performance
        - Reduced technical debt
        - More consistent API
        - Easier for new contributors

  - type: textarea
    id: code_examples
    attributes:
      label: üìã **Code Examples**
      description: Provide before/after code examples or pseudocode showing the improvement.
      placeholder: |
        **Before:**
        ```powershell
        function Get-UserInfo {
            if (-not $Credential) { throw "Credential required" }
            # ... authentication logic ...
            # ... main logic ...
        }
        ```
        
        **After:**
        ```powershell
        function Get-UserInfo {
            $authResult = Invoke-AuthenticationCheck -Credential $Credential
            # ... main logic ...
        }
        ```

  - type: dropdown
    id: refactor_type
    attributes:
      label: üîß **Refactoring Type**
      options:
        - Code Duplication Removal
        - Function Decomposition
        - Performance Optimization
        - Error Handling Standardization        - Parameter Validation Improvement
        - Class/Module Restructuring
        - Design Pattern Implementation
        - Other
      description: What type of refactoring is this?
    validations:
      required: true

  - type: dropdown
    id: priority
    attributes:
      label: üö© **Priority**      options:
        - priority: low
        - priority: medium
        - priority: high
      default: 1
      description: How important is this refactoring?
    validations:
      required: true

  - type: checkboxes
    id: breaking_changes
    attributes:
      label: ‚ö° **Breaking Changes**
      description: Will this refactoring introduce breaking changes?
      options:
        - label: This refactoring may introduce breaking changes to the public API
        - label: This is purely internal refactoring with no external impact
        - label: Backward compatibility can be maintained

  - type: textarea
    id: testing_strategy
    attributes:
      label: üß™ **Testing Strategy**
      description: How should this refactoring be tested to ensure it doesn't break functionality?
      placeholder: |
        Testing approach:
        - Run existing unit tests
        - Add new tests for extracted functions
        - Integration testing with real scenarios
        - Performance benchmarking (if applicable)

  - type: checkboxes
    id: implementation
    attributes:
      label: üõ†Ô∏è **Implementation Willingness**
      description: Are you willing to help implement this refactoring?
      options:
        - label: I'm willing to submit a pull request for this refactoring
        - label: I can help with code review
        - label: I can help with testing and validation

  - type: textarea
    id: additional_context
    attributes:
      label: üìö **Additional Context**
      description: Any additional information that would be helpful for this refactoring.
      placeholder: |        - Related refactoring opportunities
        - Dependencies that need to be considered
        - Timeline considerations
        - References to coding standards or best practices

  - type: markdown
    attributes:
      value: |
        ---  
        Once you've filled out all sections, click **Submit new issue**.  
        Thank you for helping us improve code quality! üöÄ
